{"mappings":"AAAAA,OAAOC,iBAAiB,UAAU,WAChC,IAAMC,EAASC,SAASC,eAAe,UAEnCC,YAAe,IAAO,EACxBH,EAAOI,MAAMC,gBAAmB,oBAAsCC,OAAlBH,YAAc,IAAI,KAEtEH,EAAOI,MAAMC,gBAAmB,yBAIpCP,OAAOC,iBAAiB,QAAQ,eAIhC,WACE,IASIQ,EATEC,EAAiBP,SAASQ,cAAc,oBACxCC,EAAaT,SAASQ,cAAc,iBACpCE,EAAaV,SAASQ,cAAc,kBACpCG,EAAQX,SAASQ,cAAc,iBAIjCI,EAASZ,SAASa,iBAAiB,gBACnCC,EAAQ,EAGNC,EAAaH,EAAO,GAAGI,WAAU,GACjCC,EAAYL,EAAOA,EAAOM,OAAS,GAAGF,WAAU,GAEtDD,EAAWI,GAAK,cAChBF,EAAUE,GAAK,aAEfR,EAAMS,OAAOL,GACbJ,EAAMU,QAAQJ,GAEd,IAAMK,EAAaV,EAAOE,GAAOS,YAEjCZ,EAAMR,MAAMqB,UAAY,cAAkCnB,QAAnBiB,EAAaR,EAAM,OAE1D,IAAMW,EAAa,WACjBnB,EAAUoB,aAAY,WACpBC,MAtBa,MA0BXC,EAAY,W,OAAM5B,SAASa,iBAAiB,iBAElDF,EAAMb,iBAAiB,iBAAiB,YACxCc,EAASgB,KACEd,GAAOK,KAAOJ,EAAWI,KAClCR,EAAMR,MAAM0B,WAAa,OACzBf,EAAQ,EACRH,EAAMR,MAAMqB,UAAY,cAAkCnB,QAAnBiB,EAAaR,EAAM,QAGxDF,EAAOE,GAAOK,KAAOF,EAAUE,KACjCR,EAAMR,MAAM0B,WAAa,OACzBf,EAAQF,EAAOM,OAAS,EACxBP,EAAMR,MAAMqB,UAAY,cAAkCnB,QAAnBiB,EAAaR,EAAM,WAI9D,IAAMa,EAAkB,WACtBf,EAASgB,IACLd,GAASF,EAAOM,OAAS,IAC7BJ,IACAH,EAAMR,MAAM0B,WAAa,eACzBlB,EAAMR,MAAMqB,UAAY,cAAkCnB,QAAnBiB,EAAaR,EAAM,SAU1DP,EAAeT,iBAAiB,cAAc,WAC9CgC,cAAcxB,MAGdC,EAAeT,iBAAiB,aAAc2B,GAC9Cf,EAAWZ,iBAAiB,QAAS6B,GACrClB,EAAWX,iBAAiB,SAbA,WACxBgB,GAAS,IACbA,IACAH,EAAMR,MAAM0B,WAAa,eACzBlB,EAAMR,MAAMqB,UAAY,cAAkCnB,QAAnBiB,EAAaR,EAAM,WAW1DW,IAGFM,GAEA,WACwB/B,SAASC,eAAe,iBAK9C,IALA,IAEMW,EADcZ,SAASC,eAAe,eACjB+B,uBAAuB,gBAC5CV,EAAatB,SAASgC,uBAAuB,gBAAgB,GAAGC,YAE7DC,EAAI,EAAGA,EAAItB,EAAOM,OAAQgB,IACjCtB,EAAOsB,GAAG/B,MAAMgC,KAAOD,EAAIZ,EAAa,KAG1CI,aAAY,WACV,IAAK,IAAIU,EAAI,EAAGA,EAAIxB,EAAOM,OAAQkB,IAAK,CACtC,IAAMC,EAAsBC,SAAS1B,EAAOwB,GAAGjC,MAAMgC,MAC/CI,EAAkBF,EAAsB,EAC9CzB,EAAOwB,GAAGjC,MAAMgC,KAAOE,EAAsBf,EAAa,KAEvDiB,GACD3B,EAAOwB,GAAGjC,MAAMqC,WAAa,SAC7B5B,EAAOwB,GAAGjC,MAAMgC,MAASvB,EAAOM,OAAS,GAAKI,EAAc,MACpB,YAA/BV,EAAOwB,GAAGjC,MAAMqC,aACzB5B,EAAOwB,GAAGjC,MAAMqC,WAAa,cAGhC,KAKLC","sources":["src/index.js"],"sourcesContent":["window.addEventListener('scroll', function() {\n  const header = document.getElementById('header');\n\n  if ((pageYOffset / 100) < 1) {\n    header.style.backgroundColor =  `rgba(28, 37, 44, ${pageYOffset / 100})`;\n  } else {\n    header.style.backgroundColor =  'rgba(28, 37, 44, 1)';\n  }\n});\n\nwindow.addEventListener('load', () => {\n  \n});\n\nfunction heroSlider() {\n  const slideContainer = document.querySelector('.hero__container');\n  const buttonPrev = document.querySelector('.button__left');\n  const buttonNext = document.querySelector('.button__right');\n  const slide = document.querySelector('.hero__slides');\n  const interval = 3000;\n\n\n  let slides = document.querySelectorAll('.hero__slide');\n  let index = 1;\n  let slideId;\n\n  const firstClone = slides[0].cloneNode(true);\n  const lastClone = slides[slides.length - 1].cloneNode(true);\n\n  firstClone.id = 'first-clone';\n  lastClone.id = 'last-clone';\n\n  slide.append(firstClone);\n  slide.prepend(lastClone);\n\n  const slideWidth = slides[index].clientWidth;\n\n  slide.style.transform = `translateX(${-slideWidth * index}px)`;\n\n  const startSlide = () => {\n    slideId = setInterval(() => {\n      moveToNextSlide();\n    }, interval);\n  };\n\n  const getSlides = () => document.querySelectorAll('.hero__slide');\n\n  slide.addEventListener('transitionend', () => {\n  slides = getSlides();\n  if (slides[index].id === firstClone.id) {\n    slide.style.transition = 'none';\n    index = 1;\n    slide.style.transform = `translateX(${-slideWidth * index}px)`;\n  }\n\n  if (slides[index].id === lastClone.id) {\n    slide.style.transition = 'none';\n    index = slides.length - 2;\n    slide.style.transform = `translateX(${-slideWidth * index}px)`;\n  }\n});\n\nconst moveToNextSlide = () => {\n  slides = getSlides();\n  if (index >= slides.length - 1) return;\n  index++;\n  slide.style.transition = '.7s ease-out';\n  slide.style.transform = `translateX(${-slideWidth * index}px)`;\n};\n\n  const moveToPreviousSlide = () => {\n  if (index <= 0) return;\n  index--;\n  slide.style.transition = '.7s ease-out';\n  slide.style.transform = `translateX(${-slideWidth * index}px)`;\n  };\n\n  slideContainer.addEventListener('mouseenter', () => {\n  clearInterval(slideId);\n});\n\n  slideContainer.addEventListener('mouseleave', startSlide);\n  buttonNext.addEventListener('click', moveToNextSlide);\n  buttonPrev.addEventListener('click', moveToPreviousSlide);\n\n  startSlide();\n}\n\nheroSlider();\n\nfunction brandsSlider () {\n  const brandsGallery = document.getElementById('brandsGallery');\n  const brandsSlide = document.getElementById('brandsSlide');\n  const slides = brandsSlide.getElementsByClassName('brands__logo');\n  const slideWidth = document.getElementsByClassName('brands__logo')[0].offsetWidth;\n\n  for (let i = 0; i < slides.length; i++) {\n    slides[i].style.left = i * slideWidth + 'px';\n  }\n\n  setInterval(() => {\n    for (let i = 0; i < slides.length; i++) {\n      const styleOfFirstElement = parseInt(slides[i].style.left);\n      const isLessThenZero = (styleOfFirstElement < 0);\n      slides[i].style.left = styleOfFirstElement - slideWidth + 'px';\n\n      if(isLessThenZero) {\n        slides[i].style.visibility = 'hidden';\n        slides[i].style.left = ((slides.length - 2) * slideWidth) + 'px';\n      } else if (slides[i].style.visibility !== 'visible'){\n        slides[i].style.visibility = 'visible';\n      }\n    }\n  }, 3000);\n}\n\n\n\nbrandsSlider();"],"names":["window","addEventListener","header","document","getElementById","pageYOffset","style","backgroundColor","concat","slideId","slideContainer","querySelector","buttonPrev","buttonNext","slide","slides","querySelectorAll","index","firstClone","cloneNode","lastClone","length","id","append","prepend","slideWidth","clientWidth","transform","startSlide","setInterval","moveToNextSlide","getSlides","transition","clearInterval","$b8f9b7833fa37166$var$heroSlider","getElementsByClassName","offsetWidth","i1","left","i","styleOfFirstElement","parseInt","isLessThenZero","visibility","$b8f9b7833fa37166$var$brandsSlider"],"version":3,"file":"index.279459d3.js.map"}